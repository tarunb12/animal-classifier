{"version":3,"sources":["components/AppBar/index.tsx","components/DropZone/index.tsx","components/ImagePreview/index.tsx","types/animal/breed/index.ts","types/animal/index.ts","constants/index.ts","components/Info/index.tsx","constants/descriptions.ts","utils/cookie.ts","components/Main/index.tsx","utils/imageUrlValidation.ts","components/PredictorLabel/index.tsx","components/Predictor/index.tsx","components/Stop/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","appBar","backgroundColor","palette","type","primary","main","grey","title","flexGrow","WebkitTouchCallout","WebkitUserSelect","KhtmlUserSelect","MozUserSelect","msUserSelect","userSelect","background","color","NavigationBar","props","processing","reset","setPaletteType","classes","AppBar","position","className","Toolbar","Typography","variant","style","padding","base","display","flexDirection","alignItems","justifyContent","borderWidth","borderRadius","borderColor","borderStyle","outline","transition","width","textAlign","accept","success","green","active","reject","error","red","text","fontSize","DropZone","onDropAccepted","useCallback","handleImageUpload","useDropzone","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","actionClass","useMemo","classNames","multiple","onChange","e","target","files","CloudUpload","ImagePreview","imageUrl","image","imageCanvas","flex","spacing","marginRight","marginBottom","maxHeight","maxWidth","breakpoints","down","imagePreview","height","backgroundPosition","backgroundRepeat","backgroundSize","uploadIcon","uploadPath","opacity","fill","light","useState","checked","setChecked","noClick","useEffect","prev","Fade","in","timeout","Paper","elevation","SvgIcon","focusable","viewBox","d","ANIMALS_WITH_BREED","ANIMALS","ANIMAL_TO_EMOJI","dog","cat","butterfly","chicken","cow","elephant","horse","sheep","spider","squirrel","infoList","paddingTop","message","animalSubheader","animal","textDecoration","animalEmoji","animalText","textTransform","Info","useTheme","toggled","setToggled","anchorEl","setAnchorEl","handleClose","open","Boolean","id","undefined","Tooltip","aria-label","IconButton","aria-describedby","onClick","event","currentTarget","Popover","onClose","onDragEnter","anchorOrigin","vertical","horizontal","transformOrigin","List","subheader","ListItem","key","gutterBottom","href","rel","Divider","ListSubheader","map","component","charAt","toUpperCase","slice","ListItemText","Switch","dark","localStorage","setItem","JSON","stringify","getCookie","name","regex","RegExp","document","cookie","replace","upload","marginTop","locationField","overflow","Main","setError","animalPrediction","breedPrediction","setProcessing","setImage","setAnimalPrediction","setBreedPrediction","handleImageUploadUrl","partial","url","cb","Image","onload","onerror","src","isReachableUrl","err","setTimeout","value","confidence","URL","createObjectURL","disabled","TextField","label","http","lastIndexOf","substring","isUrl","isImage","pathname","parse","last","search","test","isValidImageUrl","htmlFor","Button","PredictorLabel","isBreed","isBreedType","predictionContainer","marginLeft","labelContainer","confidenceContainer","textDecorationLine","textDecorationStyle","setOpen","prediction","loading","CircularProgress","size","onOpen","container","imageContainer","resultContainer","flexWrap","Predictor","includes","yesButton","noButton","Stop","Close","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","paletteType","createMuiTheme","blue","secondary","pink","A400","app","margin","border","content","App","prefersDark","useMediaQuery","initialTheme","ttl","ThemeProvider","CssBaseline","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"6SAgBMA,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,OAAQ,CACNC,gBAAwC,UAAvBF,EAAMG,QAAQC,KAC3BJ,EAAMG,QAAQE,QAAQC,KACtBC,IAAK,MAEXC,MAAO,CACLC,SAAU,EACVC,mBAAoB,OACpBC,iBAAkB,OAClBC,gBAAiB,OACjBC,cAAe,OACfC,aAAc,OACdC,WAAY,OACZ,eAAgB,CACdC,WAAY,OACZC,MAAO,QAET,oBAAqB,CACnBD,WAAY,OACZC,MAAO,aAoCEC,EA/BO,SAACC,GAA+B,IAC5CC,EAAsCD,EAAtCC,WAAYC,EAA0BF,EAA1BE,MAAOC,EAAmBH,EAAnBG,eACrBC,EAAUzB,IAEhB,OACE,kBAAC,WAAD,KACE,kBAAC0B,EAAA,EAAD,CAAQC,SAAS,QAAQC,UAAWH,EAAQtB,QAC1C,kBAAC0B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYF,UAAWH,EAAQf,MAAOqB,QAAQ,MAA9C,qBAGCV,EAAMC,WACH,kBAAC,GAAD,CACEA,WAAYA,EACZC,MAAOA,IAET,KACJ,kBAAC,EAAD,CAAMC,eAAgBA,MAG1B,kBAACK,EAAA,EAAD,CAASG,MAAO,CAAEC,QAAS,O,0CCtD3BjC,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CgC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,YAAa,EACbC,aAAc,EACdC,YAAoC,UAAvBvC,EAAMG,QAAQC,KAAmB,OAAS,UACvDoC,YAAa,SACbtC,gBAAwC,UAAvBF,EAAMG,QAAQC,KAAmB,UAAY,UAC9Da,MAA8B,UAAvBjB,EAAMG,QAAQC,KAAmB,UAAY,UACpDqC,QAAS,OACTC,WAAY,0BACZC,MAAO,OACPlC,SAAU,EACVmC,UAAW,UAEbC,OAAQ,CACNN,YAAavC,EAAMG,QAAQ2C,QAAQxC,KACnCJ,gBAAwC,UAAvBF,EAAMG,QAAQC,KAC3B2C,IAAM,IACNA,IAAM,MAEZC,OAAQ,CACNT,YAAavC,EAAMG,QAAQE,QAAQC,MAErC2C,OAAQ,CACNV,YAAavC,EAAMG,QAAQ+C,MAAM5C,KACjCJ,gBAAwC,UAAvBF,EAAMG,QAAQC,KAC3B+C,IAAI,IACJA,IAAI,MAEVC,KAAM,CACJC,SAAU,MACVT,UAAW,cA4CAU,EAxCE,SAACnC,GAChB,IAAMI,EAAUzB,IACVyD,EAAiBC,sBAAYrC,EAAMsC,kBAAmB,IAFnB,EASrCC,YAAY,CAAEb,OAAQ,UAAWU,mBALnCI,EAJuC,EAIvCA,aACAC,EALuC,EAKvCA,cACAC,EANuC,EAMvCA,aACAC,EAPuC,EAOvCA,aACAC,EARuC,EAQvCA,aAEIC,EAAcC,mBAAQ,kBAC1BH,EAAevC,EAAQsB,OACvBkB,EAAexC,EAAQ0B,OACvBY,EAAetC,EAAQyB,OAAS,KAAI,CACpCc,EAAevC,EAAQsB,OACvBkB,EAAexC,EAAQ0B,OACvBY,EAAetC,EAAQyB,SAGzB,OACE,wBAASW,EAAa,CACpBjC,UAAWwC,IAAW3C,EAAQS,KAAMgC,KAEpC,0BAAWJ,EAAc,CACvBf,OAAQ,UACRsB,UAAU,EACVC,SAAU,SAAAC,GAAC,OAAIlD,EAAMsC,kBAAkBY,EAAEC,OAAOC,WAElD,kBAACC,EAAA,EAAD,CAAiB1C,MAAO,CAAEuB,SAAU,MACpC,0BAAM3B,UAAWH,EAAQ6B,MAAzB,kC,iCC8DSqB,EA5DM,SAACtD,GAA8B,IAAD,EA/DhCuD,EAgEXnD,GAhEWmD,EAgEQ,UAACvD,EAAMwD,aAAP,aAAC,EAAaD,SAhEA3E,aAAW,SAACC,GAAD,MAAmB,CACrE4E,YAAY,aACVC,KAAM,UACN5C,QAAS,OACTE,WAAY,SACZC,eAAgB,SAChBK,QAAS,EACTV,QAAS/B,EAAM8E,QAAQ,GACvBzC,YAAa,EACbE,YAAa,OACbC,YAAa,SACbE,WAAY,0BACZqC,YAAa/E,EAAM8E,QAAQ,GAC3BE,aAAc,EACdC,UAAW,OACXC,SAAS,cAAD,OAAgBlF,EAAM8E,QAAQ,GAA9B,QACP9E,EAAMmF,YAAYC,KAAK,MAAQ,CAC9BL,YAAa,EACbC,aAAchF,EAAM8E,QAAQ,GAC5BG,UAAW,MACXC,SAAU,SAGdG,aAAc,CACZ1C,MAAO,OACP2C,OAAQ,OACRtE,WAAY0D,EAAQ,eAAWA,EAAX,MAA0B,OAC9Ca,mBAAoB,SACpBC,iBAAkB,YAClBC,eAAgB,UAChBxD,QAAS,OACTE,WAAY,aACZC,eAAgB,YAElBS,OAAQ,CACNR,YAAa,EACbE,YAAavC,EAAMG,QAAQ2C,QAAQxC,KACnCJ,gBAAwC,UAAvBF,EAAMG,QAAQC,KAC3B2C,IAAM,IACNA,IAAM,MAEZC,OAAQ,CACNX,YAAa,EACbE,YAAavC,EAAMG,QAAQE,QAAQC,MAErC2C,OAAQ,CACNZ,YAAa,EACbE,YAAavC,EAAMG,QAAQ+C,MAAM5C,KACjCJ,gBAAwC,UAAvBF,EAAMG,QAAQC,KAC3B+C,IAAI,IACJA,IAAI,MAEVuC,WAAY,CACVrC,SAAU,aAEZsC,WAAY,CACVC,QAAS,IACTC,KAA6B,UAAvB7F,EAAMG,QAAQC,KAChBJ,EAAMG,QAAQE,QAAQyF,MACtB,wBAI2C,EAEnBC,oBAAS,GAFU,mBAE1CC,EAF0C,KAEjCC,EAFiC,KAGzC7E,EAAeD,EAAfC,WACFmC,EAAiBC,sBAAYrC,EAAMsC,kBAAmB,IAJX,EAW7CC,YAAY,CACdb,OAAQ,UACRqD,QAAS9E,EACTmC,eAAgBnC,EACZ,aACAmC,IAVJI,EAN+C,EAM/CA,aACAC,EAP+C,EAO/CA,cACAC,EAR+C,EAQ/CA,aACAC,EAT+C,EAS/CA,aACAC,EAV+C,EAU/CA,aAQIC,EAAcC,mBAAQ,kBAC1B7C,GAAcyC,EAAetC,EAAQ0B,OACrCa,EAAevC,EAAQsB,OACvBkB,EAAexC,EAAQ0B,OACvBY,EAAetC,EAAQyB,OAAS,KAAI,CACpCc,EAAevC,EAAQsB,OACvBkB,EAAexC,EAAQ0B,OACvBY,EAAetC,EAAQyB,OACvB5B,IAOF,OAJA+E,qBAAU,WACRF,GAAW,SAAAG,GAAI,OAAKA,OACnB,IAGD,kBAACC,EAAA,EAAD,CAAMC,GAAIN,EAASO,QAAS,KAC1B,kBAACC,EAAA,EAAD,eAAOC,UAAW,GAAO9C,EAAa,CACpCjC,UAAWwC,IAAW3C,EAAQqD,YAAaZ,MAE3C,0BAAWJ,EAAc,CACvBf,OAAQ,UACRsB,UAAU,EACVC,SAAU,SAAAC,GAAC,OAAIlD,EAAMsC,kBAAkBY,EAAEC,OAAOC,WAElD,yBAAK7C,UAAWH,EAAQ8D,eAClBjE,GAAc,kBAACsF,EAAA,EAAD,CAAShF,UAAWH,EAAQmE,WAAYiB,WAAW,EAAOC,QAAQ,aAChF,0BAAMlF,UAAWH,EAAQoE,WAAYkB,EAAE,oOACvC,0BAAMA,EAAE,iX,kGCnHTC,EAAqB,CAChC,MACA,OCVWC,EAAU,CACrB,YACA,MACA,UACA,MACA,MACA,WACA,QACA,QACA,SACA,YCFWC,EAAgD,CAC3DC,IAAK,eACLC,IAAK,eACLC,UAAW,eACXC,QAAS,eACTC,IAAK,eACLC,SAAU,eACVC,MAAO,eACPC,MAAO,eACPC,OAAQ,qBACRC,SAAU,sBCeN5H,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9C2H,SAAU,CACRhF,MAAO,IACPiF,WAAY,GAEdC,QAAS,CACP5F,QAAS,OACTC,cAAe,SACfC,WAAY,aACZS,UAAW,QAEbkF,gBAAiB,CACf5H,gBAAwC,UAAvBF,EAAMG,QAAQC,KAC3B,sBACA,oBAEN2H,OAAQ,CACN9F,QAAS,OACTE,WAAY,SACZC,eAAgB,gBAChBnB,MAAO,UACP+G,eAAgB,QAElBC,YAAa,CACXrF,UAAW,SAEbsF,WAAY,CACVC,cAAe,aACf1H,SAAU,EACVQ,MAAO,eAiGImH,EA7FF,SAACjH,GACZ,IAAMnB,EAAQqI,cACR9G,EAAUzB,IAFiB,EAGHiG,mBAAyC,SAAvB/F,EAAMG,QAAQC,MAH7B,mBAG1BkI,EAH0B,KAGjBC,EAHiB,OAIDxC,mBAAmC,MAJlC,mBAI1ByC,EAJ0B,KAIhBC,EAJgB,KAKzBnH,EAAmBH,EAAnBG,eAGFoH,EAAc,kBAAMD,EAAY,OAUhCE,EAAOC,QAAQJ,GACfK,EAAKF,EAAO,oBAAiBG,EAEnC,OACE,kBAAC,WAAD,KACE,kBAACC,EAAA,EAAD,CAASvI,MAAM,OAAOwI,aAAW,YAC/B,kBAACC,EAAA,EAAD,CAAYC,mBAAkBL,EAAIG,aAAW,OAAOG,QAjBtC,SAACC,GAAD,OAA0CX,EAAYW,EAAMC,iBAkBxE,kBAAC,IAAD,CAAUvH,MAAO,CAAEb,MAAO,OAAQoC,SAAU,QAGhD,kBAACiG,EAAA,EAAD,CACET,GAAIA,EACJF,KAAMA,EACNH,SAAUA,EACVe,QAASb,EACTc,YAAad,EACbe,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAS,MACTC,WAAY,UAGd,kBAACE,EAAA,EAAD,CAAMnI,UAAWH,EAAQoG,SAAUmC,UAAW,8BAC5C,kBAACC,EAAA,EAAD,CAAUC,IAAI,OAAOtI,UAAWH,EAAQsG,SACtC,kBAACjG,EAAA,EAAD,CAAYC,QAAQ,QAAQoI,cAAY,GAAxC,SAGA,kBAACrI,EAAA,EAAD,CAAYC,QAAQ,QAAQoI,cAAY,GACtC,8BCnHM,4IDqHJ,uBAAGC,KCpHC,gDDoHW5F,OAAO,SAAS6F,IAAI,uBAAnC,QAFF,OAMJ,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAe3I,UAAWH,EAAQuG,iBAAlC,qBAGCf,EAAQuD,KAAI,SAACvC,GAAD,OACX,kBAACgC,EAAA,EAAD,CACEC,IAAKjC,EACLwC,UAAU,IACVjG,OAAO,SACP4F,KAAI,wCAAmCnC,EAAOyC,OAAO,GAAGC,eAApD,OAAoE1C,EAAO2C,MAAM,IACrFP,IAAI,uBAEJ,kBAACQ,EAAA,EAAD,CAActK,QACZ,yBAAKqB,UAAWH,EAAQwG,QACtB,0BAAMrG,UAAWH,EAAQ2G,YAAaH,GACtC,0BAAMrG,UAAWH,EAAQ0G,aAAcjB,EAAgBe,WAK/D,kBAACqC,EAAA,EAAD,MACA,kBAACL,EAAA,EAAD,CAAUC,IAAI,eAAetI,UAAWH,EAAQwG,QAC9C,0BAAMrG,UAAWH,EAAQ2G,YAAzB,aACA,kBAAC0C,EAAA,EAAD,CACE5E,QAASsC,EACTlE,SAvES,WACnBmE,GAAW,SAAAD,GACT,IAAMuC,GAAQvC,EAGd,OAFAwC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUJ,IAC5CvJ,EAAeuJ,EAAO,OAAS,UACvBvC,a,kBEhFD4C,EAAY,SAACC,GACxB,IAAMC,EAAQ,IAAIC,OAAJ,uBAA2BF,EAA3B,wBACd,OAAOG,SAASC,OAAOC,QAAQJ,EAAO,O,+CCyBlCtL,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CyL,OAAQ,CACN9I,MAAO,OACPZ,QAAS,EACT2J,UAAW1L,EAAM8E,QAAQ,IAE3B6G,cAAe,CACblL,SAAU,EACVsE,YAAa,KACb6G,SAAU,UAEZtL,KAAK,aACH2B,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,gBAChBO,MAAO,OACP2C,OAAQ,OACRvD,QAAS,eACR/B,EAAMmF,YAAYC,KAAK,MAAQ,CAC9BrD,QAAS,oBAqHA8J,GAhHF,SAAC1K,GACZ,IAAMI,EAAUzB,KADiB,EAEPiG,mBAAiB,IAFV,mBAE1B7C,EAF0B,KAEnB4I,EAFmB,KAI/B1K,EASED,EATFC,WACAuD,EAQExD,EARFwD,MACAoH,EAOE5K,EAPF4K,iBACAC,EAME7K,EANF6K,gBACAC,EAKE9K,EALF8K,cACAC,EAIE/K,EAJF+K,SACAC,EAGEhL,EAHFgL,oBACAC,EAEEjL,EAFFiL,mBACA/K,EACEF,EADFE,MAUIgL,EAAuB,SAAC3H,EAAkB4H,GAC9CA,GANAL,GAAc,GACdE,OAAoBrD,GACpBsD,OAAmBtD,IAIQzH,ICzDD,SAACkL,EAAaC,GAC1C,IAAM7H,EAAQ,IAAI8H,MAClB9H,EAAM+H,OAAS,kBAAMF,GAAG,IACxB7H,EAAMgI,QAAU,kBAAMH,GAAG,IACzB7H,EAAMiI,IAAML,EDsDVM,CAAenI,GAAU,SAACoI,GACpBA,GACFhB,EAAS,0CACTI,OAASpD,KAGTiE,YAAW,kBAAMZ,EAAoB,CAAEa,MAAO,MAAOC,WAAY,QAAQ,KACzEF,YAAW,WAAQX,EAAmB,CAAEY,MAAO,WAAYC,WAAY,MAAQhB,GAAc,KAAW,KACxGC,EAAS,CAAExH,aACXuH,GAAc,QAOdxI,EAAoB,SAAC6I,GAAD,OAAuB,SAAC/H,GAChD,GAAKA,EAAL,CACA,IAAMI,EAAQJ,EAAM,GAChBI,GACF0H,EAAqBa,IAAIC,gBAAgBxI,GAAQ2H,MAcrD,OACE,kBAAC,WAAD,KACE,2BACEzJ,OAAO,UACPf,MAAO,CAAEG,QAAS,QAClB4G,GAAG,eACHsC,KAAK,eACLhH,UAAU,EACV/D,KAAK,OACLgE,SAAU,SAAAC,GAAC,OAAIZ,GAAkB,EAAlBA,CAAyBY,EAAEC,OAAOC,QACjD6I,SAAUhM,IAEZ,yBAAKM,UAAWH,EAAQjB,MACrBqE,EACG,kBAAC,GAAD,CACEoH,iBAAkBA,EAClBC,gBAAiBA,EACjBrH,MAAOA,EACPlB,kBAAmBA,GAAkB,GACrCrC,WAAYA,IAEd,kBAAC,EAAD,CAAUqC,kBAAmBA,GAAkB,KACnD,kBAAC9B,EAAA,EAAD,CAASD,UAAWH,EAAQkK,QAC1B,kBAAC4B,EAAA,EAAD,CACEnK,QAASA,EACTkK,SAAUhM,EACVS,QAAQ,SACRH,UAAWH,EAAQoK,cACnB2B,MAAOpK,GAAS,MAChBkB,SAvCgB,SAACC,GACzB,IAAMkI,EAAMlI,EAAEC,OAAO0I,OCjGM,SAACT,GAC9B,IAAKA,EAAK,OAAO,EACjB,IAAMgB,EAAOhB,EAAIiB,YAAY,QAE7B,IADc,IAAVD,IAAahB,EAAMA,EAAIkB,UAAUF,KAChCG,KAAMnB,GAAM,OAAOoB,KAAQpB,GAChC,IAAIqB,EAAWC,iBAAMtB,GAAKqB,SAC1B,IAAKA,EAAU,OAAO,EACtB,IAAME,EAAOF,EAASG,OAAO,SAE7B,OADc,IAAVD,IAAaF,EAAWA,EAASH,UAAU,EAAGK,MAC9CH,KAAQC,KACR,UAAUI,KAAKJ,IAAkB,GDwF/BK,CAAgB1B,GAIlBT,EAAS,2CAHTA,EAAS,IACTO,EAAqBE,GAAK,OAqCtB,2BAAO2B,QAAQ,gBACb,kBAACC,EAAA,EAAD,CAAQtM,QAAQ,YAAY0I,UAAU,OAAO6C,SAAUhM,GAAvD,e,UEjCGgN,GA/CQ,SAACjN,GACtB,IAjDiBkN,EAAkBC,EAiD7B/M,GAjDW8M,EAiDSlN,EAAMkN,QAjDGC,EAiDMnN,EAAMmN,YAjDcvO,aAAW,SAACC,GAAD,MAAmB,CAC3FuO,oBAAoB,aAClBtM,QAAS,OACTE,WAAY,SACZC,eAAgB,SAChBF,cAAe,SACfwJ,UAAW2C,EAAUrO,EAAM8E,QAAQ,QAAKgE,EACxC9D,aAAcqJ,OAAUvF,EAAY9I,EAAM8E,QAAQ,GAClD0J,WAAYxO,EAAM8E,QAAQ,GAC1BC,YAAa,EACbF,KAAM,WACNS,OAAQgJ,EAAW,qBAAiBtO,EAAM8E,QAAQ,GAA/B,OAAyC,OAC5DnC,MAAO,OACPwF,cAAe,cACdnI,EAAMmF,YAAYC,KAAK,MAAQ,CAC9BsG,UAAW1L,EAAM8E,QAAQ,GACzBE,aAAc,EACdwJ,WAAYH,EAAUrO,EAAM8E,QAAQ,GAAK,EACzCC,YAAasJ,EAAU,EAAIrO,EAAM8E,QAAQ,GACzCD,KAAMyJ,EAAc,UAAY,WAChChJ,OAAO,eAAD,OAAiBtF,EAAM8E,QAAQ,GAA/B,SAGV2J,eAAgB,CACdxM,QAAS,OACTE,WAAY,SACZC,eAAgB,SAChB3B,SAAU,GAEZiO,oBAAqB,CACnBzM,QAAS,OACTE,WAAY,SACZC,eAAgB,WAChBO,MAAO,OACPZ,QAAQ,GAAD,OAAK/B,EAAM8E,QAAQ,GAAnB,cAA2B9E,EAAM8E,QAAQ,KAAzC,OAETwI,MAAM,eACHtN,EAAMmF,YAAYC,KAAK,MAAQ,CAC9B/B,SAAU,SAGd4J,WAAY,CACV5J,SAAU,OACVsL,mBAAoB,YACpBC,oBAAqB,iBAI8B,EAE7B7I,oBAAkB,GAFW,mBAE9C4C,EAF8C,KAExCkG,EAFwC,OAGvB9I,oBAAkB,GAHK,mBAG9CC,EAH8C,KAGrCC,EAHqC,KAI7C6I,EAAe3N,EAAf2N,WAER3I,qBAAU,WACRF,GAAW,SAAAG,GAAI,OAAKA,OACnB,IAEH,IAAM2I,OAAyBjG,IAAfgG,EAEhB,OACE,kBAACzI,EAAA,EAAD,CAAMC,GAAIN,EAASO,QAAS,KAC1B,kBAACC,EAAA,EAAD,CAAOC,UAAW,EAAG/E,UAAWH,EAAQgN,qBACtC,yBAAK7M,UAAWH,EAAQkN,gBACrBM,EACG,kBAACC,GAAA,EAAD,CAAkBC,KAAM,KACxB,kBAACrN,EAAA,EAAD,CAAYC,QAAQ,KAAKH,UAAWH,EAAQ+L,OAA5C,iBACMwB,QADN,IACMA,OADN,EACMA,EAAY9B,MADlB,WAC8BhG,EAAe,OAAC8H,QAAD,IAACA,OAAD,EAACA,EAAY9B,QAAoB,OAGpF,yBAAKtL,UAAWH,EAAQmN,qBACrBI,GACC,kBAAC/F,EAAA,EAAD,CACEJ,KAAMA,EACNuG,OAAQ,kBAAML,GAAQ,IACtBtF,QAAS,kBAAMsF,GAAQ,IACvBrO,MAAM,aACNwI,aAAW,kBAEX,0BAAMtH,UAAWH,EAAQ0L,WAAY9D,QAAS,kBAAM0F,GAAQ,SAAAlG,GAAI,OAAKA,OAC1C,IAAxBmG,EAAW7B,WADd,UCrFRnN,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CmP,UAAU,aACRlN,QAAS,OACTU,MAAO,OACP2C,OAAQ,OACRN,aAAchF,EAAM8E,QAAQ,IAC3B9E,EAAMmF,YAAYC,KAAK,MAAQ,CAC9BlD,cAAe,WAGnBkN,eAAe,aACbvK,KAAM,UACNS,OAAQ,OACR3C,MAAO,OACN3C,EAAMmF,YAAYC,KAAK,MAAQ,CAC9BP,KAAM,WACNS,OAAQ,MACR3C,MAAO,SAGX0M,gBAAgB,aACdxK,KAAM,UACN5C,QAAS,OACTqD,OAAQ,OACRJ,SAAS,cAAD,OAAgBlF,EAAM8E,QAAQ,GAA9B,OACRwK,SAAU,OACVnN,WAAY,cACXnC,EAAMmF,YAAYC,KAAK,MAAQ,CAC9BE,OAAO,cAAD,OAAgBtF,EAAM8E,QAAQ,GAA9B,OACNI,SAAU,OACVoK,SAAU,SACVnN,WAAY,eAqCHoN,GAhCG,SAACpO,GACjB,IAAMI,EAAUzB,KACRiM,EAAsC5K,EAAtC4K,iBAAkBC,EAAoB7K,EAApB6K,gBAEpBsC,IAAcvC,GAAmBjF,EAAmB0I,SAASzD,EAAiBiB,OAIpF,OACE,yBAAKtL,UAAWH,EAAQ4N,WACtB,kBAAC,EAAD,CACExK,MAAOxD,EAAMwD,MACbvD,WAAYD,EAAMC,WAClBqC,kBAAmBtC,EAAMsC,oBAE3B,yBAAK/B,UAAWH,EAAQ8N,iBACtB,kBAAC,GAAD,CAAgBf,YAAaA,EAAaD,SAAS,EAAOS,WAAY/C,IACrEuC,GACC,kBAAC,GAAD,CAAgBA,YAAaA,EAAaD,SAAS,EAAMS,WAAY9C,O,4DC/CzElM,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CyP,UAAW,CACTxO,MAAOjB,EAAMG,QAAQE,QAAQC,MAE/BoP,SAAU,CACRzO,MAAOjB,EAAMG,QAAQ+C,MAAM5C,UAwDhBqP,GApDF,SAACxO,GACZ,IAAMI,EAAUzB,KADiB,EAETiG,oBAAkB,GAFT,mBAE1B4C,EAF0B,KAEpBkG,EAFoB,KAGzBzN,EAAsBD,EAAtBC,WAAYC,EAAUF,EAAVE,MAGdqH,EAAc,kBAAMmG,GAAQ,IAMlC,OACE,kBAAC,WAAD,KACE,kBAAC9F,EAAA,EAAD,CAASvI,MAAM,OAAOwI,aAAW,YAC/B,kBAACC,EAAA,EAAD,CAAYD,aAAW,OAAOG,QAVjB,kBAAM0F,GAAQ,KAWzB,kBAACe,GAAA,EAAD,CAAW9N,MAAO,CAAEb,MAAO,OAAQoC,SAAU,QAGjD,kBAACwM,GAAA,EAAD,CACElH,KAAMA,GAAQvH,EACdmI,QAASb,EACToH,kBAAgB,oBAChB5G,mBAAiB,2BAEjB,kBAAC6G,GAAA,EAAD,CAAalH,GAAG,qBAAhB,0BAGA,kBAACmH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,kHAKF,kBAACC,GAAA,EAAD,KACE,kBAAC/B,EAAA,EAAD,CAAQhF,QAAST,EAAahH,UAAWH,EAAQmO,SAAUS,WAAS,GAApE,YAGA,kBAAChC,EAAA,EAAD,CAAQhF,QA/BS,WACvB9H,IACAqH,KA6ByChH,UAAWH,EAAQkO,WAAtD,aC/CJzP,GAAQ,SAACoQ,GAAD,OAA8BC,YAAe,CACzDlQ,QAAS,CACPC,KAAMgQ,EACN/P,QAASiQ,IACTC,UAAWC,IACXtN,MAAO,CACL5C,KAAM6C,IAAIsN,UAKV3Q,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9C0Q,IAAK,CACHpL,OAAQ,OACRqL,OAAQ,EACR5O,QAAS,EACT6O,OAAQ,GAEVC,QAAS,CACP5O,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,gBAChBX,SAAU,WACV6D,OAAQ,YAwDGwL,GApDH,WACV,IAAMvP,EAAUzB,KACViR,EAAcC,YAAc,uCAC5BC,EAAe/F,EAAU,eAC3BA,EAAU,eACV6F,EACE,OACA,QAPU,EAQsBhL,mBAAsBkL,GAR5C,mBAQTb,EARS,KAQI9O,EARJ,OASUyE,qBATV,mBASTpB,EATS,KASFuH,EATE,OAUoBnG,oBAAkB,GAVtC,mBAUT3E,EAVS,KAUG6K,EAVH,OAWgClG,qBAXhC,mBAWTgG,EAXS,KAWSI,EAXT,OAY8BpG,qBAZ9B,mBAYTiG,EAZS,KAYQI,EAZR,KAchBjG,qBAAU,WNpDa,IAACgF,EAAc6B,EAAekE,EAA7B/F,EMqDZ,cNrD0B6B,EMqDXoD,ENpD3B9E,SAASC,OAAT,UAAqBJ,EAArB,YAA6B6B,EAA7B,2BAAqDkE,GAAO,WMqDzD,CAACd,IAEJ,IAAM/O,EAAQ,WACZ4K,GAAc,GACdE,OAAoBrD,GACpBsD,OAAmBtD,GACnBoD,OAASpD,IAGX,OACE,kBAACqI,EAAA,EAAD,CAAenR,MAAOA,GAAMoQ,IAC1B,kBAACgB,EAAA,EAAD,MACA,yBAAK1P,UAAWH,EAAQmP,KACtB,yBAAKhP,UAAWH,EAAQsP,SACtB,kBAAC,EAAD,CACExP,MAAOA,EACPD,WAAYA,EACZE,eAAgBA,IAElB,kBAAC,GAAD,CACEF,WAAYA,EACZuD,MAAOA,EACPoH,iBAAkBA,EAClBC,gBAAiBA,EACjBC,cAAeA,EACfC,SAAUA,EACVC,oBAAqBA,EACrBC,mBAAoBA,EACpB/K,MAAOA,QC3ECuH,QACW,cAA7ByI,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,GAAD,MACApG,SAASqG,eAAe,SDmIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAhP,GACLiP,QAAQjP,MAAMA,EAAM2E,a","file":"static/js/main.4fa4e22b.chunk.js","sourcesContent":["import React, { Dispatch, Fragment, SetStateAction } from 'react';\nimport {\n  AppBar,\n  PaletteType,\n  Theme,\n  Toolbar,\n  Typography,\n  makeStyles,\n} from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\n\nimport {\n  Info,\n  Stop,\n} from '..';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  appBar: {\n    backgroundColor: theme.palette.type === 'light'\n      ? theme.palette.primary.main\n      : grey[800],\n  },\n  title: {\n    flexGrow: 1,\n    WebkitTouchCallout: 'none',\n    WebkitUserSelect: 'none',\n    KhtmlUserSelect: 'none',\n    MozUserSelect: 'none',\n    msUserSelect: 'none',\n    userSelect: 'none',\n    '&::selection': {\n      background: 'none',\n      color: 'none',\n    },\n    '&::-moz-selection': {\n      background: 'none',\n      color: 'none',\n    },\n  },\n}));\n\nconst NavigationBar = (props: NavigationBarProps) => {\n  const { processing, reset, setPaletteType } = props;\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      <AppBar position='fixed' className={classes.appBar}>\n        <Toolbar>\n          <Typography className={classes.title} variant='h6'>\n            Animal Classifier\n          </Typography>\n          {props.processing\n            ? <Stop\n                processing={processing}\n                reset={reset}\n              />\n            : null}\n          <Info setPaletteType={setPaletteType} />\n        </Toolbar>\n      </AppBar>\n      <Toolbar style={{ padding: 0 }} />\n    </Fragment>\n  );\n}\n\ninterface NavigationBarProps {\n  processing: boolean,\n  setPaletteType: Dispatch<SetStateAction<PaletteType>>,\n  reset: () => void,\n}\n\nexport default NavigationBar;\n","import React, { useMemo, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Theme, makeStyles } from '@material-ui/core';\nimport { CloudUpload as CloudUploadIcon } from '@material-ui/icons';\nimport { green, red } from '@material-ui/core/colors';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  base: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: theme.palette.type === 'light' ? '#eee' : '#535353',\n    borderStyle: 'dashed',\n    backgroundColor: theme.palette.type === 'light' ? '#fafafa' : '#bdbdbd',\n    color: theme.palette.type === 'light' ? '#bdbdbd' : '#fafafa',\n    outline: 'none',\n    transition: 'border .24s ease-in-out',\n    width: '100%',\n    flexGrow: 1,\n    textAlign: 'center',\n  },\n  accept: {\n    borderColor: theme.palette.success.main,\n    backgroundColor: theme.palette.type === 'light'\n      ? green[50]\n      : green[100],\n  },\n  active: {\n    borderColor: theme.palette.primary.main,\n  },\n  reject: {\n    borderColor: theme.palette.error.main,\n    backgroundColor: theme.palette.type === 'light'\n      ? red[50]\n      : red[100],\n  },\n  text: {\n    fontSize: '2em',\n    textAlign: 'center',\n  }\n}));\n\nconst DropZone = (props: DropZoneProps) => {\n  const classes = useStyles();\n  const onDropAccepted = useCallback(props.handleImageUpload, [])\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({ accept: 'image/*', onDropAccepted });\n  const actionClass = useMemo(() =>\n    isDragAccept ? classes.accept :\n    isDragReject ? classes.reject :\n    isDragActive ? classes.active : '', [\n    isDragAccept , classes.accept ,\n    isDragReject , classes.reject ,\n    isDragActive , classes.active ,\n  ]);\n\n  return (\n    <div {...getRootProps({\n      className: classNames(classes.base, actionClass),\n    })}>\n      <input {...getInputProps({\n        accept: 'image/*',\n        multiple: false,\n        onChange: e => props.handleImageUpload(e.target.files),\n      })} />\n      <CloudUploadIcon style={{ fontSize: 80 }} />\n      <span className={classes.text}>\n        Upload an image of an animal\n      </span>\n    </div>\n  );\n}\n\ninterface DropZoneProps {\n  handleImageUpload: (file: FileList | File[] | null) => void,\n}\n\nexport default DropZone;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport {\n  Fade,\n  Paper,\n  SvgIcon,\n  Theme,\n  makeStyles,\n} from '@material-ui/core';\nimport { green, red } from '@material-ui/core/colors';\nimport classNames from 'classnames';\n\nimport { Image } from '../../types';\n\nconst useStyles = (imageUrl?: string) => makeStyles((theme: Theme) => ({\n  imageCanvas: {\n    flex: '0 1 50%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    outline: 0,\n    padding: theme.spacing(2),\n    borderWidth: 0,\n    borderColor: 'none',\n    borderStyle: 'dashed',\n    transition: 'border .24s ease-in-out',\n    marginRight: theme.spacing(1),\n    marginBottom: 0,\n    maxHeight: '100%',\n    maxWidth: `calc(50% - ${theme.spacing(1)}px)`,      \n    [theme.breakpoints.down('md')]: {\n      marginRight: 0,\n      marginBottom: theme.spacing(1),\n      maxHeight: '50%',\n      maxWidth: '100%',\n    },\n  },\n  imagePreview: {\n    width: '100%',\n    height: '100%',\n    background: imageUrl ? `url('${imageUrl}')` : 'none',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-end',\n  },\n  accept: {\n    borderWidth: 2,\n    borderColor: theme.palette.success.main,\n    backgroundColor: theme.palette.type === 'light'\n      ? green[50]\n      : green[100],\n  },\n  active: {\n    borderWidth: 2,\n    borderColor: theme.palette.primary.main,\n  },\n  reject: {\n    borderWidth: 2,\n    borderColor: theme.palette.error.main,\n    backgroundColor: theme.palette.type === 'light'\n      ? red[50]\n      : red[100],\n  },\n  uploadIcon: {\n    fontSize: '2.1875rem'\n  },\n  uploadPath: {\n    opacity: 0.75,\n    fill: theme.palette.type === 'light'\n      ? theme.palette.primary.light\n      : 'rgb(66,66,66)',\n  },\n}));\n\nconst ImagePreview = (props: ImagePreviewProps) => {\n  const classes = useStyles(props.image?.imageUrl)();\n  const [checked, setChecked] = useState(false);\n  const { processing } = props;\n  const onDropAccepted = useCallback(props.handleImageUpload, [])\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({\n    accept: 'image/*',\n    noClick: processing,\n    onDropAccepted: processing\n      ? () => {}\n      : onDropAccepted,\n  });\n  const actionClass = useMemo(() =>\n    processing && isDragActive ? classes.reject :\n    isDragAccept ? classes.accept :\n    isDragReject ? classes.reject :\n    isDragActive ? classes.active : '', [\n    isDragAccept , classes.accept ,\n    isDragReject , classes.reject ,\n    isDragActive , classes.active ,\n    processing\n  ]);\n\n  useEffect(() => {\n    setChecked(prev => !prev);\n  }, []);\n\n  return (\n    <Fade in={checked} timeout={1000}>\n      <Paper elevation={3} {...getRootProps({\n        className: classNames(classes.imageCanvas, actionClass),\n      })}>\n        <input {...getInputProps({\n          accept: 'image/*',\n          multiple: false,\n          onChange: e => props.handleImageUpload(e.target.files),\n        })} />\n        <div className={classes.imagePreview}>\n            {!processing && <SvgIcon className={classes.uploadIcon} focusable={false} viewBox='0 0 24 24'>\n              <path className={classes.uploadPath} d='M19.21 12.04l-1.53-.11-.3-1.5C16.88 7.86 14.62 6 12 6 9.94 6 8.08 7.14 7.12 8.96l-.5.95-1.07.11C3.53 10.24 2 11.95 2 14c0 2.21 1.79 4 4 4h13c1.65 0 3-1.35 3-3 0-1.55-1.22-2.86-2.79-2.96zm-5.76.96v3h-2.91v-3H8l4-4 4 4h-2.55z' />\n              <path d=\"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM19 18H6c-2.21 0-4-1.79-4-4 0-2.05 1.53-3.76 3.56-3.97l1.07-.11.5-.95C8.08 7.14 9.94 6 12 6c2.62 0 4.88 1.86 5.39 4.43l.3 1.5 1.53.11c1.56.1 2.78 1.41 2.78 2.96 0 1.65-1.35 3-3 3zM8 13h2.55v3h2.9v-3H16l-4-4z\" />\n            </SvgIcon>}\n        </div>\n      </Paper>\n    </Fade>\n  );\n}\n\ninterface ImagePreviewProps {\n  processing: boolean,\n  image?: Image,\n  handleImageUpload: (file: FileList | File[] | null) => void,\n}\n\nexport default ImagePreview;\n","import { DogBreed } from \"./dog\";\nimport { CatBreed } from \"./cat\";\n\ntype Breed =\n  | DogBreed\n  | CatBreed\n  ;\n\nexport const ANIMALS_WITH_BREED = [\n  'dog',\n  'cat',\n] as const;\nexport type AnimalWithBreed = typeof ANIMALS_WITH_BREED[number];\n\nexport type { Breed };\nexport { CATS } from './cat';\nexport { DOGS } from './dog';","export const ANIMALS = [\n  'butterfly',\n  'cat',\n  'chicken',\n  'cow',\n  'dog',\n  'elephant',\n  'horse',\n  'sheep',\n  'spider',\n  'squirrel',\n] as const;\nexport type Animal = typeof ANIMALS[number];\n\nexport type { AnimalWithBreed, Breed } from './breed';\n","import { Animal } from '../types/animal';\nimport { CATS, DOGS } from '../types/animal/breed';\n\nexport const ANIMAL_TYPE_MAP: { [key in 'dog' | 'cat']: typeof CATS | typeof DOGS; } = {\n  cat: CATS,\n  dog: DOGS,\n};\n\nexport const ANIMAL_TO_EMOJI: { [key in Animal]: string; } = {\n  dog: '🐕',\n  cat: '🐈',\n  butterfly: '🦋',\n  chicken: '🐔',\n  cow: '🐄',\n  elephant: '🐘',\n  horse: '🐎',\n  sheep: '🐑',\n  spider: '🕷️',\n  squirrel: '🐿️',\n}\n\nexport { ANIMALS } from '../types/animal';\nexport { ANIMALS_WITH_BREED, CATS, DOGS } from '../types/animal/breed';\nexport { INFO, REPO } from './descriptions';\n","import React, {\n  Dispatch,\n  Fragment,\n  MouseEvent,\n  SetStateAction,\n  useState\n} from 'react';\nimport {\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListSubheader,\n  PaletteType,\n  Popover,\n  Switch,\n  Theme,\n  Tooltip,\n  Typography,\n  makeStyles,\n  useTheme,\n} from '@material-ui/core';\nimport { Info as InfoIcon } from '@material-ui/icons'\n\nimport { Animal } from '../../types';\nimport {\n  ANIMALS,\n  ANIMAL_TO_EMOJI,\n  INFO,\n  REPO\n} from '../../constants';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  infoList: {\n    width: 320,\n    paddingTop: 8,\n  },\n  message: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    textAlign: 'left',\n  },\n  animalSubheader: {\n    backgroundColor: theme.palette.type === 'light'\n      ? 'rgba(255,255,255,1)'\n      : 'rgba(66,66,66,1)',\n  },\n  animal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n  animalEmoji: {\n    textAlign: 'right',\n  },\n  animalText: {\n    textTransform: 'capitalize',\n    flexGrow: 1,\n    color: 'inherit',\n  },\n}));\n\nconst Info = (props: InfoProps) => {\n  const theme = useTheme();\n  const classes = useStyles();\n  const [toggled, setToggled] = useState<boolean>(theme.palette.type === 'dark');\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n  const { setPaletteType } = props;\n\n  const handleClick = (event: MouseEvent<HTMLButtonElement>) => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n  const handleToggle = () => {\n    setToggled(toggled => {\n      const dark = !toggled;\n      localStorage.setItem('dark', JSON.stringify(dark));\n      setPaletteType(dark ? 'dark' : 'light');\n      return !toggled;\n    })\n  }\n  \n  const open = Boolean(anchorEl);\n  const id = open ? 'info-popover' : undefined;\n\n  return (\n    <Fragment>\n      <Tooltip title='Info' aria-label='info-tip'>\n        <IconButton aria-describedby={id} aria-label='info' onClick={handleClick}>\n          <InfoIcon style={{ color: '#fff', fontSize: 30 }} />\n        </IconButton>\n      </Tooltip>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        onDragEnter={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical:'top',\n          horizontal: 'right',\n        }}\n      >\n        <List className={classes.infoList} subheader={<li />}>\n          <ListItem key='info' className={classes.message}>\n            <Typography variant='body1' gutterBottom>\n              About\n            </Typography>\n            <Typography variant='body2' gutterBottom>\n              <span>\n                {INFO}\n                <a href={REPO} target='_blank' rel='noopener noreferrer'>here</a>.\n              </span>\n            </Typography>\n          </ListItem>\n          <Divider />\n          <ListSubheader className={classes.animalSubheader}>\n            Supported Animals\n          </ListSubheader>\n          {ANIMALS.map((animal: Animal) => (\n            <ListItem\n              key={animal}\n              component='a'\n              target='_blank'\n              href={`https://en.wikipedia.org/wiki/${animal.charAt(0).toUpperCase()}${animal.slice(1)}`}\n              rel='noopener noreferrer'\n            >\n              <ListItemText primary={\n                <div className={classes.animal}>\n                  <span className={classes.animalText}>{animal}</span>\n                  <span className={classes.animalEmoji}>{ANIMAL_TO_EMOJI[animal]}</span>\n                </div>\n              } />\n            </ListItem>\n          ))}\n          <Divider />\n          <ListItem key='theme-toggle' className={classes.animal}>\n            <span className={classes.animalText}>Dark Mode</span>\n            <Switch\n              checked={toggled}\n              onChange={handleToggle}\n            />\n          </ListItem>\n        </List>\n      </Popover>\n    </Fragment>\n  );\n}\n\ninterface InfoProps {\n  setPaletteType: Dispatch<SetStateAction<PaletteType>>,\n}\n\nexport default Info;","export const INFO = 'This project is made by Tarun Belani, under the guidance of Dr. Arunava Banerjee, for Fall 2020 Senior Project. Source code can be found '\nexport const REPO = 'https://github.com/tarunb12/animal-classifier'\n","export const getCookie = (name: string) => {\r\n  const regex = new RegExp(`(?:(?:^|.*;*)${name}*=*([^;]*).*$)|^.*$`);\r\n  return document.cookie.replace(regex, '$1');\r\n}\r\n\r\nexport const setCookie = (name: string, value: string, ttl?: number) => {\r\n  document.cookie = `${name}=${value};path=/;max-age=${ttl || 31536000}`;\r\n}","import React, {\n  ChangeEvent,\n  Dispatch,\n  Fragment,\n  SetStateAction,\n  useState\n} from 'react';\nimport {\n  Button,\n  TextField,\n  Theme,\n  Toolbar,\n  makeStyles,\n} from '@material-ui/core';\n\nimport {\n  Animal,\n  Breed,\n  Prediction,\n  Image,\n} from '../../types';\nimport {\n  DropZone,\n  Predictor,\n} from '..';\nimport { isReachableUrl, isValidImageUrl } from '../../utils';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  upload: {\n    width: '100%',\n    padding: 0,\n    marginTop: theme.spacing(1),\n  },\n  locationField: {\n    flexGrow: 1,\n    marginRight: '2%',\n    overflow: 'hidden',\n  },\n  main: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%',\n    height: '100%',\n    padding: '24px 24px 0',\n    [theme.breakpoints.down('sm')]: {\n      padding: '16px 16px 0',\n    }\n  },\n}));\n\nconst Main = (props: MainProps) => {\n  const classes = useStyles();\n  const [error, setError] = useState<string>('');\n  const {\n    processing,\n    image,\n    animalPrediction,\n    breedPrediction,\n    setProcessing,\n    setImage,\n    setAnimalPrediction,\n    setBreedPrediction,\n    reset,\n  } = props;\n\n  \n  const partialReset = () => {\n    setProcessing(false);\n    setAnimalPrediction(undefined);\n    setBreedPrediction(undefined);\n  }\n\n  const handleImageUploadUrl = (imageUrl: string, partial?: boolean) => {\n    partial ? partialReset() : reset();\n    isReachableUrl(imageUrl, (err: boolean) => {\n      if (err) {\n        setError('URL must represent a valid image file.');\n        setImage(undefined);\n      }\n      else {\n        setTimeout(() => setAnimalPrediction({ value: 'dog', confidence: .98 }), 3000);\n        setTimeout(() => { setBreedPrediction({ value: 'shih-tzu', confidence: .87 }); setProcessing(false); }, 6000);\n        setImage({ imageUrl });\n        setProcessing(true);\n        // axios.get A => if breed B then axios.get B else done => done\n        // axios.get A => setModel A => tfjs A => if breed B then axios.get B else done => setBreedModel B => tfjs B => done\n      }\n    });\n  }\n\n  const handleImageUpload = (partial?: boolean) => (files: FileList | File[] | null) => {\n    if (!files) return;\n    const image = files[0];\n    if (image) {\n      handleImageUploadUrl(URL.createObjectURL(image), partial);\n    }\n  }\n\n  const handleOnUrlChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const url = e.target.value;\n    if (isValidImageUrl(url)) {\n      setError('');\n      handleImageUploadUrl(url, true);\n    } else {\n      setError('URL must represent a valid image file.')\n    }\n  }\n\n  return (\n    <Fragment>\n      <input\n        accept='image/*'\n        style={{ display: 'none' }}\n        id='upload-photo'\n        name='upload-photo'\n        multiple={false}\n        type='file'\n        onChange={e => handleImageUpload(false)(e.target.files)}\n        disabled={processing}\n      />\n      <div className={classes.main}>\n        {image\n          ? <Predictor\n              animalPrediction={animalPrediction}\n              breedPrediction={breedPrediction}\n              image={image}\n              handleImageUpload={handleImageUpload(true)}\n              processing={processing}\n            />\n          : <DropZone handleImageUpload={handleImageUpload(false)} />}\n        <Toolbar className={classes.upload}>\n          <TextField\n            error={!!error}\n            disabled={processing}\n            variant='filled'\n            className={classes.locationField}\n            label={error || 'URL'}\n            onChange={handleOnUrlChange}\n          />\n          <label htmlFor='upload-photo'>\n            <Button variant='contained' component='span' disabled={processing}>\n              Upload\n            </Button>\n          </label>\n        </Toolbar>\n      </div>\n    </Fragment>\n  );\n}\n\ninterface MainProps {\n  processing: boolean,\n  image?: Image,\n  animalPrediction?: Prediction<Animal>,\n  breedPrediction?: Prediction<Breed>,\n  setProcessing: Dispatch<SetStateAction<boolean>>,\n  setImage: Dispatch<SetStateAction<Image | undefined>>,\n  setAnimalPrediction: Dispatch<SetStateAction<Prediction<Animal> | undefined>>,\n  setBreedPrediction: Dispatch<SetStateAction<Prediction<Breed> | undefined>>,\n  reset: () => void,\n}\n\nexport default Main;\n","import isImage from 'is-image';\nimport isUrl from 'is-url';\nimport { parse } from 'url';\n\nexport const isValidImageUrl = (url: string) => {\n  if (!url) return false;\n  const http = url.lastIndexOf('http');\n  if (http !== -1) url = url.substring(http);\n  if (!isUrl(url)) return isImage(url);\n  let pathname = parse(url).pathname;\n  if (!pathname) return false;\n  const last = pathname.search(/[:?&]/);\n  if (last !== -1) pathname = pathname.substring(0, last);\n  if (isImage(pathname)) return true;\n  if (/styles/i.test(pathname)) return false;\n  return false;\n}\n\nexport const isReachableUrl = (url: string, cb: (err: boolean) => void) => {\n  const image = new Image();\n  image.onload = () => cb(false);\n  image.onerror = () => cb(true);\n  image.src = url;\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  CircularProgress,\n  Fade,\n  Paper,\n  Theme,\n  Tooltip,\n  Typography,\n  makeStyles,\n} from '@material-ui/core';\n\nimport { ANIMAL_TO_EMOJI } from '../../constants';\nimport { Animal, Breed, Prediction } from '../../types';\n\nconst useStyles = (isBreed: boolean, isBreedType?: boolean) => makeStyles((theme: Theme) => ({\n  predictionContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    marginTop: isBreed ? theme.spacing(1) : undefined,\n    marginBottom: isBreed ? undefined : theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    marginRight: 0,\n    flex: '0 0 100%',\n    height: isBreedType ? `calc(50% - ${theme.spacing(1)}px)` : '100%',\n    width: '100%',\n    textTransform: 'capitalize',\n    [theme.breakpoints.down('md')]: {\n      marginTop: theme.spacing(1),\n      marginBottom: 0,\n      marginLeft: isBreed ? theme.spacing(1) : 0,\n      marginRight: isBreed ? 0 : theme.spacing(1),\n      flex: isBreedType ? '0 1 50%' : '0 0 100%',\n      height: `calc(100% - ${theme.spacing(1)}px)`,\n    },\n  },\n  labelContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n  },\n  confidenceContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    width: '100%',\n    padding: `${theme.spacing(1)}px ${theme.spacing(1.5)}px`,\n  },\n  label: {\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '2rem',\n    },\n  },\n  confidence: {\n    fontSize: '1rem',\n    textDecorationLine: 'underline',\n    textDecorationStyle: 'dotted',\n  },\n}));\n\nconst PredictorLabel = (props: PredictorLabelProps) => {\n  const classes = useStyles(props.isBreed, props.isBreedType)();\n  const [open, setOpen] = useState<boolean>(false);\n  const [checked, setChecked] = useState<boolean>(false);\n  const { prediction } = props;\n\n  useEffect(() => {\n    setChecked(prev => !prev);\n  }, []);\n\n  const loading = prediction === undefined;\n\n  return (\n    <Fade in={checked} timeout={1000}>\n      <Paper elevation={3} className={classes.predictionContainer}>\n        <div className={classes.labelContainer}>\n          {loading\n            ? <CircularProgress size={40} />\n            : <Typography variant='h3' className={classes.label}>\n                {`${prediction?.value}${` ${ANIMAL_TO_EMOJI[prediction?.value as Animal] || ''}`}`}\n              </Typography>}\n        </div>\n        <div className={classes.confidenceContainer}>\n          {prediction &&\n            <Tooltip\n              open={open}\n              onOpen={() => setOpen(true)}\n              onClose={() => setOpen(false)}\n              title='Confidence'\n              aria-label='confidence-tip'\n            >\n              <span className={classes.confidence} onClick={() => setOpen(open => !open)}>\n                {prediction.confidence * 100}%\n              </span>\n            </Tooltip>}\n        </div>\n      </Paper>\n    </Fade>\n  );\n}\n\ninterface PredictorLabelProps {\n  isBreed: boolean,\n  isBreedType?: boolean,\n  prediction?: Prediction<Animal | Breed>,\n}\n\nexport default PredictorLabel;","import React from 'react';\nimport { Theme, makeStyles } from '@material-ui/core';\n\nimport { ANIMALS_WITH_BREED } from '../../constants';\nimport { Animal, AnimalWithBreed, Breed, Prediction, Image } from '../../types';\nimport { ImagePreview } from '..';\nimport PredictorLabel from '../PredictorLabel';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n    marginBottom: theme.spacing(1),\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column',\n    }\n  },\n  imageContainer: {\n    flex: '0 1 50%',\n    height: '100%',\n    width: '50%',\n    [theme.breakpoints.down('md')]: {\n      flex: '0 0 100%',\n      height: '50%',\n      width: '100%',\n    },\n  },\n  resultContainer: {\n    flex: '0 1 50%',\n    display: 'flex',\n    height: '100%',\n    maxWidth: `calc(50% - ${theme.spacing(1)}px)`,\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    [theme.breakpoints.down('md')]: {\n      height: `calc(50% - ${theme.spacing(1)}px)`,\n      maxWidth: '100%',\n      flexWrap: 'nowrap',\n      alignItems: 'normal'\n    }\n  },\n}));\n\nconst Predictor = (props: PredictorProps) => {\n  const classes = useStyles();\n  const { animalPrediction, breedPrediction } = props;\n\n  const isBreedType = animalPrediction ? ANIMALS_WITH_BREED.includes(animalPrediction.value as AnimalWithBreed) : false;\n  // console.log(isBreedType, props.prediction, props.prediction ? NIMALS_WITH_BREED:'w', 'dog' in ANIMALS_WITH_BREED)\n\n\n  return (\n    <div className={classes.container}>\n      <ImagePreview\n        image={props.image}\n        processing={props.processing}\n        handleImageUpload={props.handleImageUpload}\n      />\n      <div className={classes.resultContainer}>\n        <PredictorLabel isBreedType={isBreedType} isBreed={false} prediction={animalPrediction} />\n        {isBreedType &&\n          <PredictorLabel isBreedType={isBreedType} isBreed={true} prediction={breedPrediction} />}\n      </div>\n    </div>\n  );\n}\n\ninterface PredictorProps {\n  processing: boolean,\n  animalPrediction?: Prediction<Animal>,\n  breedPrediction?: Prediction<Breed>,\n  image?: Image,\n  handleImageUpload: (file: FileList | File[] | null) => void,\n}\n\nexport default Predictor;\n","import React, { Fragment, useState } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Theme,\n  Tooltip,\n  makeStyles,\n} from '@material-ui/core';\nimport { Close as CloseIcon } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  yesButton: {\n    color: theme.palette.primary.main,\n  },\n  noButton: {\n    color: theme.palette.error.main,\n  },\n}));\n\nconst Stop = (props: StopProps) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState<boolean>(false);\n  const { processing, reset } = props;\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleResetClose = () => {\n    reset();\n    handleClose();\n  }\n\n  return (\n    <Fragment>\n      <Tooltip title='Stop' aria-label='stop-tip'>\n        <IconButton aria-label='stop' onClick={handleOpen}>\n          <CloseIcon style={{ color: '#fff', fontSize: 30 }} />\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        open={open && processing}\n        onClose={handleClose}\n        aria-labelledby=\"stop-dialog-title\"\n        aria-describedby=\"stop-dialog-description\"\n      >\n        <DialogTitle id=\"stop-dialog-title\">\n          Stop image prediction?\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Stop the prediction for the current image. You will\n            need to re-upload the image to recieve a prediction.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} className={classes.noButton} autoFocus>\n            Disagree\n          </Button>\n          <Button onClick={handleResetClose} className={classes.yesButton}>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Fragment>\n  );\n}\n\ninterface StopProps {\n  processing: boolean,\n  reset: () => void,\n}\n\nexport default Stop;\n","import React, { useEffect, useState } from 'react';\nimport { Theme, makeStyles, useMediaQuery } from '@material-ui/core';\n\nimport {\n  CssBaseline,\n  PaletteType,\n  ThemeProvider,\n  createMuiTheme,\n} from '@material-ui/core';\nimport { blue, pink, red } from '@material-ui/core/colors';\n\nimport { AppBar, Main } from './components';\nimport { Animal, Breed, Prediction, Image } from './types';\nimport { getCookie, setCookie } from './utils';\n\nconst theme = (paletteType: PaletteType) => createMuiTheme({\n  palette: {\n    type: paletteType,\n    primary: blue,\n    secondary: pink,\n    error: {\n      main: red.A400,\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  app: {\n    height: '100%',\n    margin: 0,\n    padding: 0,\n    border: 0,\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    position: 'relative',\n    height: '100%',\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const prefersDark = useMediaQuery('@media (prefers-color-scheme: dark)');\n  const initialTheme = getCookie('paletteType') as PaletteType\n    ? getCookie('paletteType') as PaletteType\n    : prefersDark\n      ? 'dark'\n      : 'light';\n  const [paletteType, setPaletteType] = useState<PaletteType>(initialTheme);\n  const [image, setImage] = useState<Image>();\n  const [processing, setProcessing] = useState<boolean>(false);\n  const [animalPrediction, setAnimalPrediction] = useState<Prediction<Animal>>();\n  const [breedPrediction, setBreedPrediction] = useState<Prediction<Breed>>();\n\n  useEffect(() => {\n    setCookie('paletteType', paletteType);\n  }, [paletteType]);\n\n  const reset = () => {\n    setProcessing(false);\n    setAnimalPrediction(undefined);\n    setBreedPrediction(undefined);\n    setImage(undefined);\n  }\n\n  return (\n    <ThemeProvider theme={theme(paletteType)}>\n      <CssBaseline />\n      <div className={classes.app}>\n        <div className={classes.content}>\n          <AppBar\n            reset={reset}\n            processing={processing}\n            setPaletteType={setPaletteType}\n          />\n          <Main\n            processing={processing}\n            image={image}\n            animalPrediction={animalPrediction}\n            breedPrediction={breedPrediction}\n            setProcessing={setProcessing}\n            setImage={setImage}\n            setAnimalPrediction={setAnimalPrediction}\n            setBreedPrediction={setBreedPrediction}\n            reset={reset}\n          />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}