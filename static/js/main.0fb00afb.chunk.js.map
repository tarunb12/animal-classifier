{"version":3,"sources":["components/AppBar/index.tsx","components/DropZone/index.tsx","components/ImagePreview/index.tsx","types/animal/breed/index.ts","types/animal/index.ts","constants/index.ts","components/Info/index.tsx","constants/descriptions.ts","components/Main/index.tsx","utils/imageUrlValidation.ts","components/PredictorLabel/index.tsx","components/Predictor/index.tsx","components/Stop/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","title","flexGrow","WebkitTouchCallout","WebkitUserSelect","KhtmlUserSelect","MozUserSelect","msUserSelect","userSelect","background","color","NavigationBar","props","classes","processing","reset","AppBar","position","Toolbar","Typography","className","variant","base","display","flexDirection","alignItems","justifyContent","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","outline","transition","width","textAlign","accept","palette","success","main","green","active","primary","reject","error","red","text","fontSize","DropZone","onDropAccepted","useCallback","handleImageUpload","useDropzone","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","actionClass","useMemo","classNames","multiple","onChange","e","target","files","CloudUpload","style","ImagePreview","imageUrl","image","imageCanvas","flex","padding","spacing","marginRight","marginBottom","maxHeight","maxWidth","breakpoints","down","imagePreview","height","backgroundPosition","backgroundRepeat","backgroundSize","useState","checked","setChecked","noClick","useEffect","prev","Fade","in","timeout","Paper","elevation","ANIMALS_WITH_BREED","ANIMALS","ANIMAL_TO_EMOJI","dog","cat","butterfly","chicken","cow","elephant","horse","sheep","spider","squirrel","infoList","paddingTop","message","animalSubheader","animal","textDecoration","animalEmoji","animalText","textTransform","Info","anchorEl","setAnchorEl","handleClose","open","Boolean","id","undefined","Tooltip","aria-label","IconButton","aria-describedby","onClick","event","currentTarget","Popover","onClose","onDragEnter","anchorOrigin","vertical","horizontal","transformOrigin","List","subheader","ListItem","key","gutterBottom","href","rel","Divider","ListSubheader","map","component","charAt","toUpperCase","slice","ListItemText","upload","marginTop","locationField","overflow","Main","setError","prediction","breedPrediction","setProcessing","setImage","setPrediction","setBreedPrediction","handleImageUploadUrl","url","cb","Image","onload","onerror","src","isReachableUrl","err","setTimeout","URL","createObjectURL","name","type","disabled","TextField","label","value","http","lastIndexOf","substring","isUrl","isImage","pathname","parse","last","search","test","isValidImageUrl","htmlFor","Button","PredictorLabel","isBreed","isBreedType","labelContainer","marginLeft","loading","clearInterval","CircularProgress","size","container","imageContainer","resultContainer","flexWrap","Predictor","includes","yesButton","noButton","Stop","setOpen","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","app","margin","border","content","App","window","location","hostname","match","createMuiTheme","blue","secondary","pink","A400","default","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.0fb00afb.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport {\n  AppBar,\n  Theme,\n  Toolbar,\n  Typography,\n  makeStyles,\n} from '@material-ui/core';\n\nimport {\n  Info,\n  Stop,\n} from '..';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  title: {\n    flexGrow: 1,\n    WebkitTouchCallout: 'none',\n    WebkitUserSelect: 'none',\n    KhtmlUserSelect: 'none',\n    MozUserSelect: 'none',\n    msUserSelect: 'none',\n    userSelect: 'none',\n    '&::selection': {\n      background: 'none',\n      color: 'none',\n    },\n    '&::-moz-selection': {\n      background: 'none',\n      color: 'none',\n    },\n  },\n}));\n\nconst NavigationBar = (props: NavigationBarProps) => {\n  const classes = useStyles();\n  const { processing, reset } = props;\n\n  return (\n    <Fragment>\n      <AppBar position='fixed'>\n        <Toolbar>\n          <Typography className={classes.title} variant='h6'>\n            Animal Classifier\n          </Typography>\n          {props.processing\n            ? <Stop\n                processing={processing}\n                reset={reset}\n              />\n            : null}\n          <Info />\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </Fragment>\n  );\n}\n\ninterface NavigationBarProps {\n  processing: boolean,\n  reset: () => void,\n}\n\nexport default NavigationBar;\n","import React, { useMemo, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Theme, makeStyles } from '@material-ui/core';\nimport { CloudUpload as CloudUploadIcon } from '@material-ui/icons';\nimport { green, red } from '@material-ui/core/colors';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  base: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: '#eeeeee',\n    borderStyle: 'dashed',\n    backgroundColor: '#fafafa',\n    color: '#bdbdbd',\n    outline: 'none',\n    transition: 'border .24s ease-in-out',\n    width: '100%',\n    flexGrow: 1,\n    textAlign: 'center',\n  },\n  accept: {\n    borderColor: theme.palette.success.main,\n    backgroundColor: green[50],\n  },\n  active: {\n    borderColor: theme.palette.primary.main,\n  },\n  reject: {\n    borderColor: theme.palette.error.main,\n    backgroundColor: red[50],\n  },\n  text: {\n    fontSize: '2em',\n    textAlign: 'center',\n  }\n}));\n\nconst DropZone = (props: DropZoneProps) => {\n  const classes = useStyles();\n  const onDropAccepted = useCallback(props.handleImageUpload, [])\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({ accept: 'image/*', onDropAccepted });\n  const actionClass = useMemo(() =>\n    isDragAccept ? classes.accept :\n    isDragReject ? classes.reject :\n    isDragActive ? classes.active : '', [\n    isDragAccept , classes.accept ,\n    isDragReject , classes.reject ,\n    isDragActive , classes.active ,\n  ]);\n\n  return (\n    <div {...getRootProps({\n      className: classNames(classes.base, actionClass),\n    })}>\n      <input {...getInputProps({\n        accept: 'image/*',\n        multiple: false,\n        onChange: e => props.handleImageUpload(e.target.files),\n      })} />\n      <CloudUploadIcon style={{ fontSize: 80 }} />\n      <span className={classes.text}>\n        Upload an image of an animal\n      </span>\n    </div>\n  );\n}\n\ninterface DropZoneProps {\n  handleImageUpload: (file: FileList | File[] | null) => void,\n}\n\nexport default DropZone;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport {\n  Fade,\n  Paper,\n  Theme,\n  makeStyles,\n} from '@material-ui/core';\nimport { green, red } from '@material-ui/core/colors';\nimport classNames from 'classnames';\n\nimport { Image } from '../../types';\n\nconst useStyles = (imageUrl?: string) => makeStyles((theme: Theme) => ({\n  imageCanvas: {\n    flex: '0 1 50%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: theme.spacing(2),\n    marginRight: theme.spacing(1),\n    marginBottom: 0,\n    maxHeight: '100%',\n    maxWidth: '50%',      \n    [theme.breakpoints.down('md')]: {\n      marginRight: 0,\n      marginBottom: theme.spacing(1),\n      maxHeight: '50%',\n      maxWidth: '100%',\n    },\n  },\n  imagePreview: {\n    width: '100%',\n    height: '100%',\n    background: imageUrl ? `url('${imageUrl}')` : 'none',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n  },\n  accept: {\n    borderColor: theme.palette.success.main,\n    backgroundColor: green[50],\n  },\n  active: {\n    borderColor: theme.palette.primary.main,\n  },\n  reject: {\n    borderColor: theme.palette.error.main,\n    backgroundColor: red[50],\n  },\n}));\n\nconst ImagePreview = (props: ImagePreviewProps) => {\n  const classes = useStyles(props.image?.imageUrl)();\n  const [checked, setChecked] = useState(false);\n  const { processing } = props;\n  const onDropAccepted = useCallback(props.handleImageUpload, [])\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone({\n    accept: 'image/*',\n    noClick: processing,\n    onDropAccepted: processing\n      ? () => {}\n      : onDropAccepted,\n  });\n  const actionClass = useMemo(() =>\n    processing && isDragActive ? classes.reject :\n    isDragAccept ? classes.accept :\n    isDragReject ? classes.reject :\n    isDragActive ? classes.active : '', [\n    isDragAccept , classes.accept ,\n    isDragReject , classes.reject ,\n    isDragActive , classes.active ,\n    processing\n  ]);\n\n  useEffect(() => {\n    setChecked(prev => !prev);\n  }, []);\n\n  return (\n    <Fade in={checked} timeout={1000}>\n      <Paper elevation={3} {...getRootProps({\n        className: classNames(classes.imageCanvas, actionClass),\n        // onClick: e => e.stopPropagation(),\n      })}>\n        <input {...getInputProps({\n          accept: 'image/*',\n          multiple: false,\n          onChange: e => props.handleImageUpload(e.target.files),\n        })} />\n        <div className={classes.imagePreview} />\n      </Paper>\n    </Fade>\n  );\n}\n\ninterface ImagePreviewProps {\n  processing: boolean,\n  image?: Image,\n  handleImageUpload: (file: FileList | File[] | null) => void,\n}\n\nexport default ImagePreview;\n","import { DogBreed } from \"./dog\";\nimport { CatBreed } from \"./cat\";\n\ntype Breed =\n  | DogBreed\n  | CatBreed\n  ;\n\nexport const ANIMALS_WITH_BREED = [\n  'dog',\n  'cat',\n] as const;\nexport type AnimalWithBreed = typeof ANIMALS_WITH_BREED[number];\n\nexport type { Breed };\nexport { CATS } from './cat';\nexport { DOGS } from './dog';","export const ANIMALS = [\n  'butterfly',\n  'cat',\n  'chicken',\n  'cow',\n  'dog',\n  'elephant',\n  'horse',\n  'sheep',\n  'spider',\n  'squirrel',\n] as const;\nexport type Animal = typeof ANIMALS[number];\n\nexport type { AnimalWithBreed, Breed } from './breed';\n","import { Animal } from '../types/animal';\nimport { CATS, DOGS } from '../types/animal/breed';\n\nexport const ANIMAL_TYPE_MAP: { [key in 'dog' | 'cat']: typeof CATS | typeof DOGS; } = {\n  cat: CATS,\n  dog: DOGS,\n};\n\nexport const ANIMAL_TO_EMOJI: { [key in Animal]: string; } = {\n  dog: '🐕',\n  cat: '🐈',\n  butterfly: '🦋',\n  chicken: '🐔',\n  cow: '🐄',\n  elephant: '🐘',\n  horse: '🐎',\n  sheep: '🐑',\n  spider: '🕷️',\n  squirrel: '🐿️',\n}\n\nexport { ANIMALS } from '../types/animal';\nexport { ANIMALS_WITH_BREED, CATS, DOGS } from '../types/animal/breed';\nexport { INFO, REPO } from './descriptions';\n","import React, { Fragment, MouseEvent, useState } from 'react';\nimport {\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListSubheader,\n  Popover,\n  Theme,\n  Tooltip,\n  Typography,\n  makeStyles,\n} from '@material-ui/core';\nimport { Info as InfoIcon } from '@material-ui/icons'\n\nimport { Animal } from '../../types';\nimport {\n  ANIMALS,\n  ANIMAL_TO_EMOJI,\n  INFO,\n  REPO\n} from '../../constants';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  infoList: {\n    width: 320,\n    paddingTop: 8,\n  },\n  message: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    textAlign: 'left',\n  },\n  animalSubheader: {\n    backgroundColor: 'rgba(255, 255, 255, 1)',\n  },\n  animal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    color: 'inherit',\n    textDecoration: 'none',\n  },\n  animalEmoji: {\n    textAlign: 'right',\n  },\n  animalText: {\n    textTransform: 'capitalize',\n    flexGrow: 1,\n    color: 'inherit',\n  },\n}));\n\nconst Info = () => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n  const handleClick = (event: MouseEvent<HTMLButtonElement>) => setAnchorEl(event.currentTarget);\n  const handleClose = () => setAnchorEl(null);\n  \n  const open = Boolean(anchorEl);\n  const id = open ? 'info-popover' : undefined;\n\n  return (\n    <Fragment>\n      <Tooltip title='Info' aria-label='info-tip'>\n        <IconButton aria-describedby={id} aria-label='info' onClick={handleClick}>\n          <InfoIcon style={{ color: '#fff', fontSize: 30 }} />\n        </IconButton>\n      </Tooltip>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        onDragEnter={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical:'top',\n          horizontal: 'right',\n        }}\n      >\n        <List className={classes.infoList} subheader={<li />}>\n          <ListItem key='info' className={classes.message}>\n            <Typography variant='body1' gutterBottom>\n              About\n            </Typography>\n            <Typography variant='body2' gutterBottom>\n              <span>\n                {INFO}\n                <a href={REPO} target='_blank' rel='noopener noreferrer'>here</a>.\n              </span>\n            </Typography>\n          </ListItem>\n          <Divider />\n          <ListSubheader className={classes.animalSubheader}>\n            Supported Animals\n          </ListSubheader>\n          {ANIMALS.map((animal: Animal) => (\n            <ListItem\n              key={animal}\n              component='a'\n              target='_blank'\n              href={`https://en.wikipedia.org/wiki/${animal.charAt(0).toUpperCase()}${animal.slice(1)}`}\n              rel='noopener noreferrer'\n            >\n              <ListItemText primary={\n                <div className={classes.animal}>\n                  <span className={classes.animalText}>{animal}</span>\n                  <span className={classes.animalEmoji}>{ANIMAL_TO_EMOJI[animal]}</span>\n                </div>\n              } />\n            </ListItem>\n          ))}\n        </List>\n      </Popover>\n    </Fragment>\n  );\n}\n\nexport default Info;","export const INFO = 'This project is made by Tarun Belani, under the guidance of Dr. Arunava Banerjee, for Fall 2020 Senior Project. Source code can be found '\nexport const REPO = 'https://github.com/tarunb12/animal-classifier'\n","import React, {\n  ChangeEvent,\n  Dispatch,\n  Fragment,\n  SetStateAction,\n  useState\n} from 'react';\nimport {\n  Button,\n  TextField,\n  Theme,\n  Toolbar,\n  makeStyles,\n} from '@material-ui/core';\n\nimport {\n  Animal,\n  Breed,\n  Image,\n} from '../../types';\nimport {\n  DropZone,\n  Predictor,\n} from '..';\nimport { isReachableUrl, isValidImageUrl } from '../../utils';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  upload: {\n    width: '100%',\n    padding: 0,\n    marginTop: theme.spacing(1),\n  },\n  locationField: {\n    flexGrow: 1,\n    marginRight: '2%',\n    overflow: 'hidden',\n  },\n  main: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%',\n    height: '100%',\n    padding: '24px 24px 0',\n    [theme.breakpoints.down('sm')]: {\n      padding: '16px 16px 0',\n    }\n  },\n}));\n\nconst Main = (props: MainProps) => {\n  const classes = useStyles();\n  const [error, setError] = useState<string>('');\n  const {\n    processing,\n    image,\n    prediction,\n    breedPrediction,\n    setProcessing,\n    setImage,\n    setPrediction,\n    setBreedPrediction,\n    reset,\n  } = props;\n\n  const handleImageUploadUrl = (imageUrl: string) => {\n    reset();\n    isReachableUrl(imageUrl, (err: boolean) => {\n      if (err) {\n        setError('URL must represent a valid image file.');\n        setImage(undefined);\n      }\n      else {\n        setTimeout(() => setPrediction('dog'), 3000);\n        setTimeout(() => { setBreedPrediction('shih-tzu'); setProcessing(false); }, 6000);\n        setImage({ imageUrl });\n        setProcessing(true);\n        // axios.get A => if breed B then axios.get B else done => done\n        // axios.get A => setModel A => tfjs A => if breed B then axios.get B else done => setBreedModel B => tfjs B => done\n      }\n    });\n  }\n\n  const handleImageUpload = (files: FileList | File[] | null) => {\n    if (!files) return;\n    const image = files[0];\n    if (image) {\n      handleImageUploadUrl(URL.createObjectURL(image));\n    }\n  }\n\n  const handleOnUrlChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const url = e.target.value;\n    if (isValidImageUrl(url)) {\n      setError('');\n      handleImageUploadUrl(url);\n    } else {\n      reset();\n      setError('URL must represent a valid image file.')\n    }\n  }\n\n  return (\n    <Fragment>\n      <input\n        accept='image/*'\n        style={{ display: 'none' }}\n        id='upload-photo'\n        name='upload-photo'\n        multiple={false}\n        type='file'\n        onChange={e => handleImageUpload(e.target.files)}\n        disabled={processing}\n      />\n      <div className={classes.main}>\n        {image\n          ? <Predictor\n              prediction={prediction}\n              breedPrediction={breedPrediction}\n              image={image}\n              handleImageUpload={handleImageUpload}\n              processing={processing}\n            />\n          : <DropZone handleImageUpload={handleImageUpload} />}\n        <Toolbar className={classes.upload}>\n          <TextField\n            error={!!error}\n            disabled={processing}\n            variant='filled'\n            className={classes.locationField}\n            label={error || 'URL'}\n            onChange={handleOnUrlChange}\n          />\n          <label htmlFor='upload-photo'>\n            <Button variant='contained' component='span' disabled={processing}>\n              Upload\n            </Button>\n          </label>\n        </Toolbar>\n      </div>\n    </Fragment>\n  );\n}\n\ninterface MainProps {\n  processing: boolean,\n  image?: Image,\n  prediction?: Animal,\n  breedPrediction?: Breed,\n  setProcessing: Dispatch<SetStateAction<boolean>>,\n  setImage: Dispatch<SetStateAction<Image | undefined>>\n  setPrediction: Dispatch<SetStateAction<Animal | undefined>>\n  setBreedPrediction: Dispatch<SetStateAction<Breed | undefined>>\n  reset: () => void,\n}\n\nexport default Main;\n","import isImage from 'is-image';\nimport isUrl from 'is-url';\nimport { parse } from 'url';\n\nexport const isValidImageUrl = (url: string) => {\n  if (!url) return false;\n  const http = url.lastIndexOf('http');\n  if (http !== -1) url = url.substring(http);\n  if (!isUrl(url)) return isImage(url);\n  let pathname = parse(url).pathname;\n  if (!pathname) return false;\n  const last = pathname.search(/[:?&]/);\n  if (last !== -1) pathname = pathname.substring(0, last);\n  if (isImage(pathname)) return true;\n  if (/styles/i.test(pathname)) return false;\n  return false;\n}\n\nexport const isReachableUrl = (url: string, cb: (err: boolean) => void) => {\n  const image = new Image();\n  image.onload = () => cb(false);\n  image.onerror = () => cb(true);\n  image.src = url;\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  CircularProgress,\n  Fade,\n  Paper,\n  Theme,\n  Typography,\n  makeStyles,\n} from '@material-ui/core';\n\nimport { ANIMAL_TO_EMOJI } from '../../constants';\nimport { Animal, Breed } from '../../types';\n\nconst useStyles = (isBreed: boolean, isBreedType?: boolean) => makeStyles((theme: Theme) => ({\n  labelContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: isBreed ? theme.spacing(1) : undefined,\n    marginBottom: isBreed ? undefined : theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    marginRight: 0,\n    flex: '0 0 100%',\n    height: isBreedType ? `calc(50% - ${theme.spacing(1)}px)` : '100%',\n    width: '100%',\n    textTransform: 'capitalize',\n    [theme.breakpoints.down('md')]: {\n      marginTop: theme.spacing(1),\n      marginBottom: 0,\n      marginLeft: isBreed ? theme.spacing(1) : 0,\n      marginRight: isBreed ? 0 : theme.spacing(1),\n      flex: isBreedType ? '0 1 50%' : '0 0 100%',\n      height: `calc(100% - ${theme.spacing(1)}px)`,\n    },\n  },\n}));\n\nconst PredictorLabel = (props: PredictorLabelProps) => {\n  const classes = useStyles(props.isBreed, props.isBreedType)();\n  const [checked, setChecked] = useState(false);\n  const { prediction } = props;\n\n  const loading = prediction === undefined;\n\n  useEffect(() => {\n    setChecked(prev => !prev);\n  }, []);\n\n  // console.log(props.isBreedType)\n\n  useEffect(() => {\n    clearInterval();\n  }, [props.prediction]);\n\n  return (\n    <Fade in={checked} timeout={1000}>\n      <Paper elevation={3} className={classes.labelContainer}>\n        {loading\n          ? <CircularProgress size={40} />\n          : <Typography variant='h3'>\n              {`${prediction}${` ${ANIMAL_TO_EMOJI[prediction as Animal] || ''}`}`}\n            </Typography>}\n      </Paper>\n    </Fade>\n  );\n}\n\ninterface PredictorLabelProps {\n  isBreed: boolean,\n  isBreedType?: boolean,\n  prediction?: Animal | Breed,\n}\n\nexport default PredictorLabel;","import React from 'react';\nimport { Theme, makeStyles } from '@material-ui/core';\n\nimport { ANIMALS_WITH_BREED } from '../../constants';\nimport { Animal, Breed, Image, AnimalWithBreed } from '../../types';\nimport { ImagePreview } from '..';\nimport PredictorLabel from '../PredictorLabel';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    display: 'flex',\n    width: '100%',\n    height: '100%',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column',\n    }\n  },\n  imageContainer: {\n    flex: '0 1 50%',\n    height: '100%',\n    width: '50%',\n    [theme.breakpoints.down('md')]: {\n      flex: '0 0 100%',\n      height: '50%',\n      width: '100%',\n    },\n  },\n  resultContainer: {\n    flex: '0 1 50%',\n    display: 'flex',\n    height: '100%',\n    width: '50%',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    [theme.breakpoints.down('md')]: {\n      height: `calc(50% - ${theme.spacing(1)}px)`,\n      width: '100%',\n      flexWrap: 'nowrap',\n      alignItems: 'normal'\n    }\n  },\n}));\n\nconst Predictor = (props: PredictorProps) => {\n  const classes = useStyles();\n\n  const isBreedType = props.prediction ? ANIMALS_WITH_BREED.includes(props.prediction as AnimalWithBreed) : false;\n  // console.log(isBreedType, props.prediction, props.prediction ? NIMALS_WITH_BREED:'w', 'dog' in ANIMALS_WITH_BREED)\n\n\n  return (\n    <div className={classes.container}>\n      <ImagePreview\n        image={props.image}\n        processing={props.processing}\n        handleImageUpload={props.handleImageUpload}\n      />\n      <div className={classes.resultContainer}>\n        <PredictorLabel isBreedType={isBreedType} isBreed={false} prediction={props.prediction} />\n        {isBreedType &&\n          <PredictorLabel isBreedType={isBreedType} isBreed={true} prediction={props.breedPrediction} />}\n      </div>\n    </div>\n  );\n}\n\ninterface PredictorProps {\n  processing: boolean,\n  prediction?: Animal,\n  breedPrediction?: Breed,\n  image?: Image,\n  handleImageUpload: (file: FileList | File[] | null) => void,\n}\n\nexport default Predictor;\n","import React, { Fragment, useState } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Theme,\n  Tooltip,\n  makeStyles,\n} from '@material-ui/core';\nimport { RemoveCircle as RemoveIcon } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  yesButton: {\n    color: theme.palette.primary.main,\n  },\n  noButton: {\n    color: theme.palette.error.main,\n  },\n}));\n\nconst Stop = (props: StopProps) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState<boolean>(false);\n  const { processing, reset } = props;\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleResetClose = () => {\n    reset();\n    handleClose();\n  }\n\n  return (\n    <Fragment>\n      <Tooltip title='Stop' aria-label='stop-tip'>\n        <IconButton aria-label='stop' onClick={handleOpen}>\n          <RemoveIcon style={{ color: '#fff', fontSize: 30 }} />\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        open={open && processing}\n        onClose={handleClose}\n        aria-labelledby=\"stop-dialog-title\"\n        aria-describedby=\"stop-dialog-description\"\n      >\n        <DialogTitle id=\"stop-dialog-title\">\n          Stop image prediction?\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Stop the prediction for the current image. You will\n            need to re-upload the image to recieve a prediction.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} className={classes.noButton} autoFocus>\n            Disagree\n          </Button>\n          <Button onClick={handleResetClose} className={classes.yesButton}>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Fragment>\n  );\n}\n\ninterface StopProps {\n  processing: boolean,\n  reset: () => void,\n}\n\nexport default Stop;\n","import React, { useState } from 'react';\nimport { Theme, makeStyles } from '@material-ui/core';\n\nimport { AppBar, Main } from './components';\nimport { Animal, Breed, Image } from './types';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  app: {\n    height: '100%',\n    margin: 0,\n    padding: 0,\n    border: 0,\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    position: 'relative',\n    height: '100%',\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [image, setImage] = useState<Image>();\n  const [processing, setProcessing] = useState<boolean>(false);\n  const [prediction, setPrediction] = useState<Animal>();\n  const [breedPrediction, setBreedPrediction] = useState<Breed>();\n\n  const reset = () => {\n    setProcessing(false);\n    setPrediction(undefined);\n    setBreedPrediction(undefined);\n    setImage(undefined);\n  }\n\n  return (\n    <div className={classes.app}>\n      <div className={classes.content}>\n        <AppBar\n          reset={reset}\n          processing={processing}\n        />\n        <Main\n          processing={processing}\n          image={image}\n          prediction={prediction}\n          breedPrediction={breedPrediction}\n          setProcessing={setProcessing}\n          setImage={setImage}\n          setPrediction={setPrediction}\n          setBreedPrediction={setBreedPrediction}\n          reset={reset}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { blue, pink, red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: pink,\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}